AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  url-shortener-backend
  A URL shortener with Cognito, DynamoDB and API Gateway.

Globals:
  Function:
    Timeout: 10
    Environment:
      Variables:
        SHORT_URLS_TABLE: !Ref ShortURLsTable
        CLICK_EVENTS_TABLE: !Ref ClickEventsTable

Resources:
  ShortURLsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ShortURLs
      AttributeDefinitions:
        - AttributeName: short_code
          AttributeType: S
      KeySchema:
        - AttributeName: short_code
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ClickEventsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ClickEvents
      AttributeDefinitions:
        - AttributeName: short_code
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: short_code
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  SharedLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: shared-layer
      Description: "Shared code for all functions"
      ContentUri: layers/shared/
      CompatibleRuntimes:
        - python3.13

  # --- Lambda Functions ---
  ShortenFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ShortenFunction
      CodeUri: functions/shorten/
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures: [arm64]
      Layers: [!Ref SharedLayer]
      Events:
        ShortenApi:
          Type: Api
          Properties:
            Path: /shorten
            Method: POST
            RestApiId: !Ref ApiGateway
      Policies: [DynamoDBCrudPolicy: {TableName: !Ref ShortURLsTable}]

  DeleteUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeleteUrlFunction
      CodeUri: functions/delete_url/
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures: [arm64]
      Layers: [!Ref SharedLayer]
      Events:
        DeleteUrlApi:
          Type: Api
          Properties:
            Path: /urls/{short_code}
            Method: DELETE
            RestApiId: !Ref ApiGateway
            Auth: { Authorizer: CognitoAuth }
      Policies: [DynamoDBCrudPolicy: {TableName: !Ref ShortURLsTable}]

  RedirectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: RedirectFunction
      CodeUri: functions/redirect/
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures: [arm64]
      Layers: [!Ref SharedLayer]
      Environment: {Variables: {CLICK_EVENTS_TABLE: !Ref ClickEventsTable}}
      Events:
        RedirectApi:
          Type: Api
          Properties:
            Path: /{short_code}
            Method: GET
            RestApiId: !Ref ApiGateway
            Auth: { Authorizer: NONE }
      Policies:
        - DynamoDBReadPolicy: {TableName: !Ref ShortURLsTable}
        - DynamoDBWritePolicy: {TableName: !Ref ClickEventsTable}

  ListUrlsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ListUrlsFunction
      CodeUri: functions/list_urls/
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures: [arm64]
      Layers: [!Ref SharedLayer]
      Events:
        ListUrlsApi:
          Type: Api
          Properties:
            Path: /urls
            Method: GET
            RestApiId: !Ref ApiGateway
            Auth: { Authorizer: CognitoAuth }
      Policies: [DynamoDBReadPolicy: {TableName: !Ref ShortURLsTable}]

  AnalyticsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AnalyticsFunction
      CodeUri: functions/analytics/
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures: [arm64]
      Layers: [!Ref SharedLayer]
      Environment: {Variables: {CLICK_EVENTS_TABLE: !Ref ClickEventsTable}}
      Events:
        AnalyticsApi:
          Type: Api
          Properties:
            Path: /urls/{short_code}/analytics
            Method: GET
            RestApiId: !Ref ApiGateway
            Auth: {Authorizer: CognitoAuth}
      Policies:
        - DynamoDBReadPolicy: {TableName: !Ref ClickEventsTable}
        - DynamoDBReadPolicy: {TableName: !Ref ShortURLsTable}

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: CognitoAuth
        Authorizers:
          CognitoAuth:
            UserPoolArn: !GetAtt UserPool.Arn
      Cors:
        AllowOrigin:
          - "https://cortaurl.com.br"
          - "http://localhost:5173"
          - "http://cortaurl.vercel.app"
        AllowHeaders:
          - Authorization
          - Content-Type
          - Accept
        AllowMethods:
          - GET
          - POST
          - DELETE
          - OPTIONS

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: ShortURLsUserPool
      UsernameAttributes: [email]
      AutoVerifiedAttributes: [email]

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: ShortenerClient
      UserPoolId: !Ref UserPool
      GenerateSecret: false

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  UserPoolId:
    Description: "Cognito User Pool ID"
    Value: !Ref UserPool
  UserPoolClientId:
    Description: "Cognito User Pool Client ID"
    Value: !Ref UserPoolClient